// <auto-generated />
using System;
using Kabus.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Kabus.Api.Migrations
{
    [DbContext(typeof(KabusDb))]
    [Migration("20180818021920_Initial-Migration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kabus.Api.Database.DbEntity", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Name");

                    b.HasKey("Uid");

                    b.ToTable("Entities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("DbEntity");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTag", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Uid");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTeamUser", b =>
                {
                    b.Property<Guid>("TeamUid");

                    b.Property<Guid>("UserUid");

                    b.HasKey("TeamUid", "UserUid");

                    b.HasIndex("UserUid");

                    b.ToTable("TeamUsers");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTopic", b =>
                {
                    b.Property<Guid>("Uid")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Title");

                    b.HasKey("Uid");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTopicTag", b =>
                {
                    b.Property<Guid>("TopicUid");

                    b.Property<Guid>("TagUid");

                    b.HasKey("TopicUid", "TagUid");

                    b.HasIndex("TagUid");

                    b.ToTable("TopicTags");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTeam", b =>
                {
                    b.HasBaseType("Kabus.Api.Database.DbEntity");


                    b.ToTable("DbTeam");

                    b.HasDiscriminator().HasValue("DbTeam");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbUser", b =>
                {
                    b.HasBaseType("Kabus.Api.Database.DbEntity");

                    b.Property<string>("Email");

                    b.ToTable("DbUser");

                    b.HasDiscriminator().HasValue("DbUser");
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTeamUser", b =>
                {
                    b.HasOne("Kabus.Api.Database.DbTeam", "Team")
                        .WithMany("TeamUsers")
                        .HasForeignKey("TeamUid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kabus.Api.Database.DbUser", "User")
                        .WithMany("TeamUsers")
                        .HasForeignKey("UserUid")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Kabus.Api.Database.DbTopicTag", b =>
                {
                    b.HasOne("Kabus.Api.Database.DbTag", "Tag")
                        .WithMany("TopicTags")
                        .HasForeignKey("TagUid")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Kabus.Api.Database.DbTopic", "Topic")
                        .WithMany("TopicTags")
                        .HasForeignKey("TopicUid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
